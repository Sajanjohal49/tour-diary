{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetUpId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\n\nconst MeetupId = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        Content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: blocking,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address\n      }\n    }\n  };\n}\nexport default MeetupId;","map":{"version":3,"sources":["C:/Users/hp/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetUpId]/index.js"],"names":["MeetupDetails","MongoClient","ObjectId","Fragment","Head","MeetupId","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","blocking","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACD,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAKE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBG,KAF1B;AAGE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBE,WAHhC;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;AAgBA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,8FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAEC,QADL;AAELC,IAAAA,KAAK,EAAEP,OAAO,CAACQ,GAAR,CAAYC,MAAM,KAAK;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAACF,MAAM,CAACP,GAAP,CAAWU,QAAX;AAAX;AADoB,KAAL,CAAlB;AAFF,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMhB,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMgB,cAAc,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AACrDd,IAAAA,GAAG,EAAElB,QAAQ,CAAC2B,QAAD;AADwC,GAA1B,CAA7B;AAGDM,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACCpB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV8B,QAAAA,EAAE,EAAEJ,cAAc,CAACb,GAAf,CAAmBU,QAAnB,EADM;AAEVtB,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAFZ;AAGVE,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAHZ;AAIVD,QAAAA,WAAW,EAAEwB,cAAc,CAACxB,WAJlB;AAKVE,QAAAA,OAAO,EAAEsB,cAAc,CAACtB;AALd;AADP;AADF,GAAP;AAWD;AACD,eAAeN,QAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport Head from 'next/head'\r\nconst MeetupId = (props) => {\r\n  return (\r\n    <Fragment>\r\n   <Head>\r\n    <title>{props.meetupData.title}</title>\r\n    <meta name='description' Content={props.meetupData.description} />\r\n   </Head>\r\n      <MeetupDetails\r\n        title={props.meetupData.title}\r\n        image={props.meetupData.image}\r\n        description={props.meetupData.description}\r\n        address={props.meetupData.address}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\r\n  ) \r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: blocking,\r\n    paths: meetups.map(meetup => ({\r\n      params: { meetupId:meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n console.log(selectedMeetup)\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n        address: selectedMeetup.address,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupId;\r\n"]},"metadata":{},"sourceType":"module"}