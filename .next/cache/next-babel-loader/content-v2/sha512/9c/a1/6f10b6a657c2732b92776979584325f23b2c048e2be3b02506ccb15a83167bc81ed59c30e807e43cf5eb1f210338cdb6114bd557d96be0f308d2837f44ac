{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\sajanDesign\\\\nextMeetup\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from 'mongodb';\nconst DumyMeetup = [{\n  id: \"m1\",\n  title: \"Dummy Text\",\n  image: \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\n  description: \"this is a long description of this application \",\n  address: \"Malton,Mississauga,Ontario\"\n}, {\n  id: \"m2\",\n  title: \"Dummy Text\",\n  image: \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\n  description: \"this is a long description of this application \",\n  address: \"Malton,Mississauga,Ontario\"\n}, {\n  id: \"m3\",\n  title: \"Dummy Text\",\n  image: \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\n  description: \"this is a long description of this application \",\n  address: \"Malton,Mississauga,Ontario\"\n}];\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}; //if the data does'n t change frequently then this method is ok\n// export async function  getServerSideProps(context){\n//     const res =context.res;\n//     const req = context.req;\n//     return{\n//         props:{\n//             meetups:DumyMeetup\n//         }\n//         //don't need to have revalidate because this function runs after incoming request from client\n//     }\n// }\n//use function instead const \n//use Props instead of anything so that it would be a great practice\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString(),\n        image: meetup.image\n      }))\n    },\n    //revalidate to avoid using run build command frequently and 1 is a second format \n    revalidate: 1\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["C:/Users/hp/Desktop/sajanDesign/nextMeetup/pages/index.js"],"names":["MeetupList","MongoClient","DumyMeetup","id","title","image","description","address","Homepage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AAEE,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,WAAW,EAAE,iDALf;AAMEC,EAAAA,OAAO,EAAE;AANX,CADiB,EASjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,WAAW,EAAE,iDALf;AAMEC,EAAAA,OAAO,EAAE;AANX,CATiB,EAiBjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,WAAW,EAAE,iDALf;AAMEC,EAAAA,OAAO,EAAE;AANX,CAjBiB,CAAnB;;AA0BA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE5B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHC,C,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACD;;;AACA,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,8FADiB,CAArB;AAGE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAE,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAArB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACF,SAAO;AACCV,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAACA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAW;AAC3BjB,QAAAA,KAAK,EAACiB,MAAM,CAACjB,KADc;AAE3BG,QAAAA,OAAO,EAACc,MAAM,CAACd,OAFY;AAG3BD,QAAAA,WAAW,EAACe,MAAM,CAACf,WAHQ;AAI3BH,QAAAA,EAAE,EAACkB,MAAM,CAACC,GAAP,CAAWC,QAAX,EAJwB;AAK3BlB,QAAAA,KAAK,EAACgB,MAAM,CAAChB;AALc,OAAX,CAAZ;AADN,KADP;AAUC;AACAmB,IAAAA,UAAU,EAAC;AAXZ,GAAP;AAcH;AACD,eAAehB,QAAf","sourcesContent":["\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\n  const DumyMeetup = [\r\n    {\r\n      id: \"m1\",\r\n      title: \"Dummy Text\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\r\n      description: \"this is a long description of this application \",\r\n      address: \"Malton,Mississauga,Ontario\",\r\n    },\r\n    {\r\n      id: \"m2\",\r\n      title: \"Dummy Text\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\r\n      description: \"this is a long description of this application \",\r\n      address: \"Malton,Mississauga,Ontario\",\r\n    },\r\n    {\r\n      id: \"m3\",\r\n      title: \"Dummy Text\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1655192937214-b53da84b8b14?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80\",\r\n      description: \"this is a long description of this application \",\r\n      address: \"Malton,Mississauga,Ontario\",\r\n    },\r\n  ];\r\n  const Homepage = (props) => {\r\n\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n//if the data does'n t change frequently then this method is ok\r\n// export async function  getServerSideProps(context){\r\n//     const res =context.res;\r\n//     const req = context.req;\r\n//     return{\r\n//         props:{\r\n//             meetups:DumyMeetup\r\n//         }\r\n//         //don't need to have revalidate because this function runs after incoming request from client\r\n//     }\r\n// }\r\n\r\n //use function instead const \r\n//use Props instead of anything so that it would be a great practice\r\nexport async function getStaticProps(){\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://sajan:johalsaab@cluster0.aae48.mongodb.net/meetups?retryWrites=true&w=majority'\r\n        );\r\n      const db = client.db();\r\n      const meetupsCollection = db.collection(\"meetups\");\r\n      const meetups =await meetupsCollection.find().toArray();\r\n      client.close();\r\n    return {\r\n            props:{\r\n                meetups:meetups.map((meetup)=>({\r\n                    title:meetup.title,\r\n                    address:meetup.address,\r\n                    description:meetup.description,\r\n                    id:meetup._id.toString(),\r\n                    image:meetup.image,\r\n                }))\r\n            },\r\n            //revalidate to avoid using run build command frequently and 1 is a second format \r\n            revalidate:1\r\n        };\r\n    \r\n}\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}